--made by kira
--use garou
--Pucci v2
local player = game.Players.LocalPlayer

local playerGui = player.PlayerGui

local hotbar = playerGui:FindFirstChild("Hotbar")

local backpack = hotbar:FindFirstChild("Backpack")

local hotbarFrame = backpack:FindFirstChild("Hotbar")

local baseButton = hotbarFrame:FindFirstChild("1").Base

local ToolName = baseButton.ToolName


ToolName.Text = "Time Accelerated Barrage"


local player = game.Players.LocalPlayer

local playerGui = player.PlayerGui

local hotbar = playerGui:FindFirstChild("Hotbar")

local backpack = hotbar:FindFirstChild("Backpack")

local hotbarFrame = backpack:FindFirstChild("Hotbar")

local baseButton = hotbarFrame:FindFirstChild("2").Base

local ToolName = baseButton.ToolName


ToolName.Text = "Dive From The Heavens"


local player = game.Players.LocalPlayer

local playerGui = player.PlayerGui

local hotbar = playerGui:FindFirstChild("Hotbar")

local backpack = hotbar:FindFirstChild("Backpack")

local hotbarFrame = backpack:FindFirstChild("Hotbar")

local baseButton = hotbarFrame:FindFirstChild("3").Base

local ToolName = baseButton.ToolName


ToolName.Text = "Rough Blow"


local player = game.Players.LocalPlayer

local playerGui = player.PlayerGui

local hotbar = playerGui:FindFirstChild("Hotbar")

local backpack = hotbar:FindFirstChild("Backpack")

local hotbarFrame = backpack:FindFirstChild("Hotbar")

local baseButton = hotbarFrame:FindFirstChild("4").Base

local ToolName = baseButton.ToolName


ToolName.Text = "Heaven Ascended Counter"

local Players = game:GetService("Players")

local player = Players.LocalPlayer

local playerGui = player:WaitForChild("PlayerGui")


local function findGuiAndSetText()

    local screenGui = playerGui:FindFirstChild("ScreenGui")

    if screenGui then

        local magicHealthFrame = screenGui:FindFirstChild("MagicHealth")

        if magicHealthFrame then

            local textLabel = magicHealthFrame:FindFirstChild("TextLabel")

            if textLabel then

                textLabel.Text = "Made In heaven! Time will keep on Accelerating.. Getting faster and faster!"

            end

        end

    end

end


playerGui.DescendantAdded:Connect(findGuiAndSetText)

findGuiAndSetText()

--[[Animations]]

--[[move 1]]
local animationId = 12273188754  -- ID of the animation to check
local newAnimationId = 134494086123052  -- ID of the new animation to play

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- Function to send message
local function sendMessage(text)
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(text, "All")
end

-- Function to handle the animation being played
local function onAnimationPlayed(animationTrack)
    -- Check if the current animation matches the animationId we're looking for
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. tostring(animationId) then
        -- Send message when animation is executed
        sendMessage("")  -- Message sent when animation is played

        -- Stop the currently playing animation
        for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end

        -- Create and play the new animation
        local AnimAnim = Instance.new("Animation")
        AnimAnim.AnimationId = "rbxassetid://" .. tostring(newAnimationId)
        local Anim = humanoid:LoadAnimation(AnimAnim)
        
        -- Play the new animation
        Anim:Play()
        Anim:AdjustSpeed(2.5)  -- Adjust the speed of the animation as needed
    end
end

-- Connect the function to an event that detects when the animation is played
humanoid.AnimationPlayed:Connect(onAnimationPlayed)

--[[END OF MOVE 1 ANIM]]


--[[Move 2]]

local function sendMessage(text)
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(text, "All")
end

local animationId = 12296113986

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local function onAnimationPlayed(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
        -- Send a message when the animation is played (only through ReplicatedStorage)
        sendMessage("")  -- This sends the message to all players in the game chat

        -- Stop any currently playing animations
        for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end

        -- Create and play a new animation
        local AnimAnim = Instance.new("Animation")
        AnimAnim.AnimationId = "rbxassetid://13633468484"  -- Replace with the desired animation ID
        local Anim = humanoid:LoadAnimation(AnimAnim)

        local startTime = 1
        Anim:Play()
        Anim:AdjustSpeed(1.7)
        Anim.TimePosition = startTime
        Anim:AdjustSpeed(1)
    end
end

-- Connect the event to play animation
humanoid.AnimationPlayed:Connect(onAnimationPlayed)

--[[END OF MOVE 2 ANIM]]


---[[Move 3]]

local function sendMessage(text)
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(text, "All")
end

local animationId = 12309835105

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local function onAnimationPlayed(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then
        local p = game.Players.LocalPlayer
        local Humanoid = p.Character:WaitForChild("Humanoid")

        -- Stop any currently playing animations
        for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end

        -- Send the message when the animation is played
        sendMessage("")  -- Sends the message to all players in the game chat

        -- Play a new animation
        local AnimAnim = Instance.new("Animation")
        AnimAnim.AnimationId = "rbxassetid://15436668469"  -- Change to the desired animation ID

        local Anim = Humanoid:LoadAnimation(AnimAnim)
        local startTime = 0.3  -- Optional: set the start time of the animation

        Anim:Play()
        Anim:AdjustSpeed(0)  -- Sets animation speed to 0 initially
        Anim.TimePosition = startTime
        Anim:AdjustSpeed(1)  -- Resumes animation at normal speed

        -- Stop the animation after 1.8 seconds
        delay(1.2, function()
            Anim:Stop()
        end)
    end
end

-- Connect the event to play animation
humanoid.AnimationPlayed:Connect(onAnimationPlayed)

--[[END OF MOVE 3 ANIM]]

--[[Move 4]]

local animationId = 13603396939  -- ID of the animation to check
local newAnimationId = 13723174078  -- ID of the new animation to play

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

local messageSent = false  -- Flag to ensure the message is sent only once per animation

-- Function to send message
local function sendMessage(text)
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(text, "All")
end

-- Function to handle the animation being played
local function onAnimationPlayed(animationTrack)
    -- Check if the current animation matches the animationId we're looking for
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. tostring(animationId) then
        -- Only proceed if the message hasn't been sent yet
        if not messageSent then
            messageSent = true  -- Mark the message as sent
            sendMessage("Silly!")  -- Message sent when animation is played
        end

        -- Stop the currently playing animation
        for _, animTrack in pairs(humanoid:GetPlayingAnimationTracks()) do
            animTrack:Stop()
        end

        -- Create and play the new animation
        local AnimAnim = Instance.new("Animation")
        AnimAnim.AnimationId = "rbxassetid://" .. tostring(newAnimationId)
        local Anim = humanoid:LoadAnimation(AnimAnim)
        
        -- Play the new animation
        Anim:Play()
        Anim:AdjustSpeed(1.5)  -- Adjust the speed of the animation as needed
    end
end

-- Reset the flag when the animation finishes
local function onAnimationStopped(animationTrack)
    if animationTrack.Animation.AnimationId == "rbxassetid://" .. tostring(animationId) then
        messageSent = false  -- Allow the message to be sent again for the next instance
    end
end

-- Connect the functions to appropriate events
humanoid.AnimationPlayed:Connect(onAnimationPlayed)


--[[END OF MOVE 4 ANIM]]



--[[Wall combo]]

humanoid.AnimationPlayed:Connect(onAnimationPlayed)

local animationId = 15955393872


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://94020267622363"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0.05


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)


    end

end

--[[END OF WALL COMBO ANIM]]

--[[Ult Activation]]

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 12447707844


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18435535291"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1)

    end

end
--[[END OF ULT ACTIVATION ANIM]]

--[[Dash]]

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10479335397


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://17838006839"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(1.3)


delay(1.8, function()

    Anim:Stop()

end)


    end

end

--[[END OF DASH ANIM]]

--[[Uppercut]]
humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10503381238


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://18896127525"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 1.3


Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(0.7)


    end

end

--[[END OF UPPERCUT ANIM]]

--[[Downslam]]

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local animationId = 10470104242


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local function onAnimationPlayed(animationTrack)

    if animationTrack.Animation.AnimationId == "rbxassetid://" .. animationId then

local p = game.Players.LocalPlayer

local Humanoid = p.Character:WaitForChild("Humanoid")


for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do

    animTrack:Stop()

end


local AnimAnim = Instance.new("Animation")

AnimAnim.AnimationId = "rbxassetid://17838619895"

local Anim = Humanoid:LoadAnimation(AnimAnim)


local startTime = 0


wait(0.2)

Anim:Play()

Anim:AdjustSpeed(0)

Anim.TimePosition = startTime

Anim:AdjustSpeed(6)


    end

end

--[[END OF DOWNSLAM ANIM]]

--[[Punch anims]]

humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local Players = game:GetService("Players")

local player = Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoid = character:WaitForChild("Humanoid")


local animationIdsToStop = {

    [17859015788] = true, --downslam finisher

    [10469493270] = true, --punch1

    [10469630950] = true, --punch2

    [10469639222] = true, --punch3

    [10469643643] = true, --punch4

}


local replacementAnimations = {

    ["10469493270"] = "rbxassetid://17889458563", --punch1

    ["13294790250"] = "rbxassetid://17889461810", --punch2

    ["10469639222"] = "rbxassetid://17889471098", --punch3

    ["13501296372"] = "rbxassetid://17889290569", --punch4

    ["76530443909428"] = "rbxassetid://12684185971", --downslam finisher

    ["76530443909428"] = "rbxassetid://14516273501" --punch idk

}


local queue = {}

local isAnimating = false


local function playReplacementAnimation(animationId)

    if isAnimating then

        table.insert(queue, animationId)

        return

    end

   

    isAnimating = true

    local replacementAnimationId = replacementAnimations[tostring(animationId)]

    if replacementAnimationId then

        local AnimAnim = Instance.new("Animation")

        AnimAnim.AnimationId = replacementAnimationId

        local Anim = humanoid:LoadAnimation(AnimAnim)

        Anim:Play()

       

        Anim.Stopped:Connect(function()

            isAnimating = false

            if #queue > 0 then

                local nextAnimationId = table.remove(queue, 1)

                playReplacementAnimation(nextAnimationId)

            end

        end)

    else

        isAnimating = false

    end

end


local function stopSpecificAnimations()

    for _, track in ipairs(humanoid:GetPlayingAnimationTracks()) do

        local animationId = tonumber(track.Animation.AnimationId:match("%d+"))

        if animationIdsToStop[animationId] then

            track:Stop()

        end

    end

end


local function onAnimationPlayed(animationTrack)

    local animationId = tonumber(animationTrack.Animation.AnimationId:match("%d+"))

    if animationIdsToStop[animationId] then

        stopSpecificAnimations()

        animationTrack:Stop()

       

        local replacementAnimationId = replacementAnimations[tostring(animationId)]

        if replacementAnimationId then

            playReplacementAnimation(animationId)

        end

    end

end


humanoid.AnimationPlayed:Connect(onAnimationPlayed)


local player = game.Players.LocalPlayer

local character = player.Character or player.CharacterAdded:Wait()

local humanoidRootPart = character:WaitForChild("HumanoidRootPart")


local function onBodyVelocityAdded(bodyVelocity)

    if bodyVelocity:IsA("BodyVelocity") then

        bodyVelocity.Velocity = Vector3.new(bodyVelocity.Velocity.X, 0, bodyVelocity.Velocity.Z)

    end

end


character.DescendantAdded:Connect(onBodyVelocityAdded)


for _, descendant in pairs(character:GetDescendants()) do

    onBodyVelocityAdded(descendant)

end


player.CharacterAdded:Connect(function(newCharacter)

    character = newCharacter

    humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    character.DescendantAdded:Connect(onBodyVelocityAdded)

   

    for _, descendant in pairs(character:GetDescendants()) do

        onBodyVelocityAdded(descendant)

    end

end) 

--[[Adding Quote or Message when Executed]]

local player = game.Players.LocalPlayer
repeat wait() until player.Character
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Messages to send
local messages = {""}

local function sendMessage(text)
    ReplicatedStorage.DefaultChatSystemChatEvents.SayMessageRequest:FireServer(text, "All")
end

for _, message in ipairs(messages) do
    sendMessage(message)
    wait(1.7) -- Wait time for each message
end

--[[END OF QUOTES]]

--[[Execute Anims (Animations when you execute script]]

local p = game.Players.LocalPlayer
local Humanoid = p.Character:WaitForChild("Humanoid")

for _, animTrack in pairs(Humanoid:GetPlayingAnimationTracks()) do
    animTrack:Stop()
end

local AnimAnim = Instance.new("Animation")
AnimAnim.AnimationId = "rbxassetid://17108883110" -- Replace with your animation ID

local Anim = Humanoid:LoadAnimation(AnimAnim)

local startTime = 0.05

Anim:Play()
Anim:AdjustSpeed(1.2)
Anim.TimePosition = startTime
Anim:AdjustSpeed(1)

--[[END OF EXECUTE ANIMS]]

-- Tp tooooooooooooooolll 
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer


while not LocalPlayer do
    wait()
    LocalPlayer = Players.LocalPlayer
end


local function createTool(name)
    local newTool = Instance.new("Tool")
    newTool.Name = name
    newTool.RequiresHandle = false
    newTool.CanBeDropped = false
    newTool.Parent = LocalPlayer.Backpack
    return newTool
end


local function bindTeleportLogic(tool)
    tool.Activated:Connect(function()
        teleportToClosestPlayer(tool)
    end)
end


local tool = createTool("Ultimate Movement") 
bindTeleportLogic(tool)


local teleportSound = Instance.new("Sound")
teleportSound.SoundId = "rbxassetid://6519821669"
teleportSound.Volume = 2
teleportSound.Looped = false
teleportSound.PlayOnRemove = false
teleportSound.Parent = LocalPlayer

local teleportAnimation = Instance.new("Animation")
teleportAnimation.AnimationId = "rbxassetid://15957361339"


local teleportDistance = 500


local cooldownTime = 0 
local isOnCooldown = false
local originalToolName = tool.Name

local function findClosestPlayer()
    local player = LocalPlayer
    local character = player.Character
    if not character then return nil end

    local humanoidRootPart = character:FindFirstChild("HumanoidRootPart")
    if not humanoidRootPart then return nil end

    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, otherPlayer in pairs(Players:GetPlayers()) do
        if otherPlayer ~= player and otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local otherHumanoidRootPart = otherPlayer.Character.HumanoidRootPart
            local distance = (humanoidRootPart.Position - otherHumanoidRootPart.Position).magnitude

            
            if (not teleportDistance or distance <= teleportDistance) and distance < shortestDistance then
                shortestDistance = distance
                closestPlayer = otherPlayer
            end
        end
    end

    return closestPlayer, shortestDistance
end

function teleportToClosestPlayer(tool)

    if isOnCooldown then
        warn("Accelerating Time...")
        return
    end

    local player = LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    local closestPlayer, distance = findClosestPlayer()

    if closestPlayer and closestPlayer.Character then
        local closestHumanoidRootPart = closestPlayer.Character:FindFirstChild("HumanoidRootPart")
        if closestHumanoidRootPart then
            local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
            
            if not teleportDistance or distance <= teleportDistance then
                
                isOnCooldown = true

                
                teleportSound:Play()

                
                local animationTrack = humanoid:LoadAnimation(teleportAnimation)
                animationTrack:Play()

                
                humanoidRootPart.CFrame = closestHumanoidRootPart.CFrame * CFrame.new(0, 0, 1)

                
                animationTrack.Stopped:Connect(function()
                    animationTrack:Stop()
                end)

                
                if tool and tool.Parent then
                    tool:Destroy()
                end
                tool = createTool("Time Slows Down.")

                
                wait(cooldownTime)

                
                if tool and tool.Parent then
                    tool:Destroy()
                end
                tool = createTool(originalToolName)
                bindTeleportLogic(tool)
                isOnCooldown = false
                print("Rested!")
            else
                warn("Your tired.")
            end
        end
    end
end

local userInputService = game:GetService("UserInputService")
local runService = game:GetService("RunService")
local tweenService = game:GetService("TweenService")  -- Added TweenService for sound fading
local players = game:GetService("Players")

local player = players.LocalPlayer
local isPC = userInputService.KeyboardEnabled
local isActive = false
local runSoundId = "rbxassetid://98642351822308"
local runAnimationId = "rbxassetid://18897115785"
local stopAnimationId = "rbxassetid://13876406148"

local sound = Instance.new("Sound")
sound.SoundId = runSoundId
sound.Looped = true
sound.Volume = 1  -- Default volume set to 1
sound.Parent = player:WaitForChild("PlayerGui")

local tool = Instance.new("Tool")
tool.Name = "Accelerated Movement"
tool.RequiresHandle = true
tool.Parent = player.Backpack

local animationTrack
local stopAnimationTrack
local moveConnection
local moveSpeed = 250
local initialSpeed = 0.5
local speed = initialSpeed
local elapsedTime = 0
local changeTime = 2.3

local fadeDuration = 1

local trail

local function createTrail(rootPart)
    trail = Instance.new("Trail")
    trail.Attachment0 = Instance.new("Attachment", rootPart)
    trail.Attachment1 = Instance.new("Attachment", rootPart)
    trail.Attachment1.Position = Vector3.new(0, -2, 0)
    trail.Lifetime = 0.5  -- Adjust as needed
    trail.Color = ColorSequence.new(Color3.new(1, 1, 1))
    trail.Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0),
        NumberSequenceKeypoint.new(1, 1)
    })
    trail.Enabled = false
    trail.Parent = rootPart
end

local function startMoving(rootPart)
    trail.Enabled = true
    moveConnection = runService.RenderStepped:Connect(function(deltaTime)
        elapsedTime = elapsedTime + deltaTime
        if elapsedTime >= changeTime then
            moveSpeed = 350
        end

        local lookVector = rootPart.CFrame.LookVector
        local newVelocity = lookVector * moveSpeed * speed
        rootPart.Velocity = newVelocity
    end)
end

local function stopMoving(rootPart)
    if moveConnection then
        moveConnection:Disconnect()
        moveConnection = nil
        speed = initialSpeed
        elapsedTime = 0 -- Reset elapsed time
        rootPart.Velocity = Vector3.new(0, 0, 0)
        trail.Enabled = false
    end
end

local function playStopAnimation(humanoid)
    local stopAnimation = Instance.new("Animation")
    stopAnimation.AnimationId = stopAnimationId
    stopAnimationTrack = humanoid:LoadAnimation(stopAnimation)
    stopAnimationTrack:Play()
end

local function fadeOutSound()
    local tweenInfo = TweenInfo.new(fadeDuration)
    local goal = { Volume = 0 }

    local tween = tweenService:Create(sound, tweenInfo, goal)
    tween:Play()

    tween.Completed:Connect(function()
        sound:Stop()
        sound.Volume = 1
    end)
end

local function activate()
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    local rootPart = character:WaitForChild("HumanoidRootPart")

    rootPart.Anchored = false

    if not trail then
        createTrail(rootPart)
    end

    local runAnimation = Instance.new("Animation")
    runAnimation.AnimationId = runAnimationId
    animationTrack = humanoid:LoadAnimation(runAnimation)
    animationTrack:Play()
    animationTrack:AdjustSpeed(1)

    sound:Play()

    startMoving(rootPart)
end

local function deactivate()
    local character = player.Character
    local humanoid = character:WaitForChild("Humanoid")
    local rootPart = character:WaitForChild("HumanoidRootPart")

    if animationTrack then
        animationTrack:Stop()
    end

    fadeOutSound()

    stopMoving(rootPart)

    playStopAnimation(humanoid)
end

local function toggleAbility()
    if not isActive then
        activate()
    else
        deactivate()
    end
    isActive = not isActive
end

local function onKeyPress(input)
    if input.KeyCode == Enum.KeyCode.Six then  -- Changed from T to Six
        toggleAbility()
    end
end

local function onToolActivated()
    toggleAbility()
end

if isPC then
    userInputService.InputBegan:Connect(onKeyPress)
else
    tool.Activated:Connect(onToolActivated)
end

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local function updateBarColor()
    local screenGui = playerGui:FindFirstChild("ScreenGui")
    if not screenGui then return end

    local magicHealthFrame = screenGui:FindFirstChild("MagicHealth")
    if not magicHealthFrame then return end

    local healthFrame = magicHealthFrame:FindFirstChild("Health")
    if not healthFrame then return end

    local barFrame = healthFrame:FindFirstChild("Bar")
    if not barFrame then return end

    local imageLabel = barFrame:FindFirstChild("Bar")
    if not imageLabel or not imageLabel:IsA("ImageLabel") then return end

    imageLabel.ImageColor3 = Color3.fromRGB(128, 0, 255)
end

local function onCharacterAdded(character)
    updateBarColor()
end

local function onPlayerAdded()
    local character = player.Character or player.CharacterAdded:Wait()
    onCharacterAdded(character)

    player.CharacterAdded:Connect(onCharacterAdded)
end

Players.PlayerAdded:Connect(onPlayerAdded)
if player then
    onPlayerAdded()
end
--[[Garou Color Changer !DELETE IF NOT NEEDED!]]

--[[LEFT ARM COLORS]]

local char = game.Players.LocalPlayer.Character
getgenv().LArmCol = char['Left Arm'].ChildAdded:Connect(function(pp)
if pp.Name == 'WaterPalm' then
for i,v in pairs(pp:WaitForChild('ConstantEmit'):GetChildren()) do
v.Color =
ColorSequence.new{ColorSequenceKeypoint.new(0.00, 
Color3.fromRGB(255, 255, 255)), -- Change Color (Red, Green, Blue)
ColorSequenceKeypoint.new(1.00, 
Color3.fromRGB(255, 255, 255))} -- Change Color (Red, Green, Blue)
end

pp:WaitForChild('WaterTrail').Color = 
ColorSequence.new{ColorSequenceKeypoint.new(0.00, 
Color3.fromRGB(255, 255, 255)), -- Change Color (Red, Green, Blue)
ColorSequenceKeypoint.new(1.00, 
Color3.fromRGB(255, 255, 255))} -- Change Color (Red, Green, Blue)

end end)
--[[RIGHT ARM colors]]

getgenv().RArmCol = char['Right Arm'].ChildAdded:Connect(function(pp)
if pp.Name == 'WaterPalm' then
for i,v in pairs(pp:WaitForChild('ConstantEmit'):GetChildren()) do
v.Color =
ColorSequence.new{ColorSequenceKeypoint.new(0.00, 
Color3.fromRGB(255, 255, 255)), -- Change Color (Red, Green, Blue)
ColorSequenceKeypoint.new(1.00, 
Color3.fromRGB(255, 255, 255))} -- Change Color (Red, Green, Blue)
end
pp:WaitForChild('WaterTrail').Color = 
ColorSequence.new{ColorSequenceKeypoint.new(0.00, 
Color3.fromRGB(255, 255, 255)), -- Change Color (Red, Green, Blue) 
ColorSequenceKeypoint.new(1.00, 
Color3.fromRGB(255, 255, 255))} -- Change Color (Red, Green, Blue)

end end)

--[[END OF GAROU COLORS]]

local player = game.Players.LocalPlayer
local animationId = "rbxassetid://13777407704"  -- The animation ID you want to play

-- Function to stop all animations, including default ones
local function stopAllAnimations(humanoid)
    local animator = humanoid:FindFirstChildOfClass("Animator")
    if animator then
        -- Stop all animations currently playing in the animator
        for _, track in pairs(animator:GetPlayingAnimationTracks()) do
            track:Stop()
        end
    end
end

-- Function to create the tool
local function createToolForPlayer()
    local backpack = player:WaitForChild("Backpack") -- Wait for Backpack
    local character = player.Character or player.CharacterAdded:Wait() -- Wait for character

    -- Create the tool
    local tool = Instance.new("Tool")
    tool.Name = "Murderous Dance"
    tool.RequiresHandle = false -- No handle needed
    tool.CanBeDropped = false -- Prevent dropping
    tool.Parent = backpack -- Add tool to Backpack

    -- Create the animation
    local animation = Instance.new("Animation")
    animation.AnimationId = animationId
    animation.Parent = tool -- Attach animation to the tool

    local equippedTrack -- For tracking the animation

    -- Handle tool being equipped
    tool.Equipped:Connect(function()
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            print("Tool equipped. Stopping all other animations and playing the selected animation.")

            -- Stop all animations before playing the new one
            stopAllAnimations(humanoid)

            -- Load and play the specific animation
            equippedTrack = humanoid:LoadAnimation(animation)
            equippedTrack.Looped = true -- Loop the animation if needed
            equippedTrack:Play() -- Play the animation

            -- Disable default movement animations (walking/running)
            humanoid.WalkSpeed = 0  -- Set WalkSpeed to 0 to prevent walking/running animations from playing
        else
            warn("Humanoid not found! Unable to play animation.")
        end
    end)

    -- Handle tool being unequipped
    tool.Unequipped:Connect(function()
        local humanoid = character:FindFirstChildOfClass("Humanoid")
        if humanoid then
            print("Tool unequipped. Stopping animation.")
            if equippedTrack then
                equippedTrack:Stop() -- Stop the animation
                equippedTrack = nil -- Clear the track
            end

            -- Re-enable movement by restoring WalkSpeed
            humanoid.WalkSpeed = 16  -- Set WalkSpeed back to normal value for movement
        end
    end)

    print("Tool with animation successfully created for player: " .. player.Name)
end

-- Create the tool for the player
createToolForPlayer()

print("Client-side animated tool script executed!")

local player = game.Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
